{"version":3,"sources":["pages/ResultsVerify.js","pages/surveyForm.js","redux/actions/userActions.js","App.js","redux/reducers/userReducer.js","redux/reducers/rootReducer.js","serviceWorker.js","index.js"],"names":["connect","state","firstName","userReducer","lastName","city","addressLine","zipCode","phoneNumber","email","feet","inches","birthDate","educationLevel","dispatch","MyMapComponent","withScriptjs","withGoogleMap","props","defaultZoom","defaultCenter","lat","lng","isMarkerShown","position","class","for","googleMapURL","loadingElement","style","height","containerElement","mapElement","React","useState","Date","validatePage","setValidatePage","confirmEmail","setConfirmEmail","setErrorMessage","to","novalidate","type","id","onChange","event","target","value","pattern","placeholder","required","maxlength","selected","name","min","aria-hidden","setEmail","data-sitekey","data-callback","data-expired-callback","data-recaptcha","data-error","onClick","console","log","path","component","ResultsVerify","exact","surveyForm","INITIAL_STATE","action","combineReducers","Boolean","window","location","hostname","match","store","createStore","rootReducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a517b087.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\r\n\r\n\r\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\"\r\n\r\nconst ResultsVerify=({dispatch,firstName,lastName,city,state,zipCode,addressLine,phoneNumber,email,feet,inches,birthDate,educationLevel})=> {\r\n   \r\n  const mapStyles = {\r\n    width: '100%',\r\n    height: '100%'\r\n  };\r\n  const containerStyle = {\r\n    width: '400px',\r\n    height: '400px'\r\n  };\r\n   \r\n  const center = {\r\n    lat:37.7241,\r\n    lng: 122.4799\r\n  };\r\n   \r\nconst MyMapComponent = withScriptjs(withGoogleMap((props) =>\r\n<GoogleMap\r\n  defaultZoom={8}\r\n  defaultCenter={{ lat: 37.7241, lng: 122.4799}}\r\n>\r\n  {props.isMarkerShown && <Marker position={{ lat: -34.397, lng: 150.644 }} />}\r\n</GoogleMap>\r\n))\r\n  function MyComponent() {\r\n    const [map, setMap] = React.useState(null)\r\n   \r\n    const onLoad = React.useCallback(function callback(map) {\r\n      const bounds = new window.google.maps.LatLngBounds();\r\n      map.fitBounds(bounds);\r\n      setMap(map)\r\n    }, [])\r\n   \r\n    const onUnmount = React.useCallback(function callback(map) {\r\n      setMap(null)\r\n    }, [])\r\n  }\r\n   \r\n   \r\n   \r\n   return(\r\n<div class=\"container\">\r\n<div class=\"card text-center\">\r\n  <div class=\"card-header\">\r\n  CSC 642 Summer 2020 Individual Assignment Swetha Govindu\r\n  </div>\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">Data survey Form Summary</h5>\r\n    <div class=\"card-text\">\r\n\r\n\r\n  \r\n  <div class=\"form-label-group\">\r\n      <label for=\"inputFirstName\">First Name</label>{firstName}\r\n    </div>\r\n    <div class=\"form-label-group\">\r\n      <label for=\"inputLastName\">Last Name </label>{lastName}     \r\n  </div>\r\n  <div class=\"form-label-group\">\r\n    <label for=\"inputAddress\">Address</label>{addressLine}\r\n  </div>\r\n  <div class=\"form-label-group\">\r\n  <label for=\"inputCity\">City </label>{city}\r\n  </div>\r\n    \r\n    <div class=\"form-label-group\">\r\n      <label for=\"inputState\">State </label>{state}\r\n    \r\n    </div>\r\n    <div class=\"form-label-group\">\r\n      <label for=\"inputZip\">Zip </label>{zipCode}\r\n    </div>\r\n  <div class=\"form-label-group\">\r\n      <label for=\"inputBirthDate\">Birth date  </label>{birthDate}\r\n       </div>\r\n  \r\n  <div class=\"form-label-group\">\r\n    <label for=\"inputEducationLevel\">Education Level</label>{educationLevel}\r\n    \r\n  </div>\r\n  {feet &&(\r\n  <div class=\"form-label-group\">\r\n  <label for=\"inputHeight\">Height </label> {feet} feet {inches} inches\r\n    </div>)}\r\n\r\n  \r\n  \r\n  <div class=\"form-label-group\">\r\n      <label for=\"inputPhone\">Phone number </label>{phoneNumber}\r\n  </div>\r\n  <div class=\"form-label-group\">\r\n      <label for=\"inputEmail\">Email Address </label>{email}\r\n        \r\n  </div>\r\n  {/* https://maps.googleapis.com/maps/api/geocode/json?address=high+st+hasting&components=country:GB\r\n&key=YOUR_API_KEY */}\r\n  <MyMapComponent\r\n  isMarkerShown\r\n  googleMapURL=\"https://maps.googleapis.com/maps/api/geocode/json?address=high+st+hasting&components=country:GB\r\n  &key=AIzaSyDKthUAQZzDQWjiDSwp20RitR8-d9qP1Bw\"\r\n  loadingElement={<div style={{ height: `100%` }} />}\r\n  containerElement={<div style={{ height: `400px` }} />}\r\n  mapElement={<div style={{ height: `100%` }} />}\r\n/>\r\n  \r\n  {/* <div class=\"card-footer text-muted\">\r\n    2 days ago\r\n  </div> */}\r\n</div></div></div></div>\r\n        \r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      firstName: state.userReducer.firstName,\r\n      lastName: state.userReducer.lastName,\r\n      city: state.userReducer.city,\r\n      state: state.userReducer.state,\r\n      addressLine: state.userReducer.addressLine,\r\n      zipCode: state.userReducer.zipCode,\r\n      phoneNumber: state.userReducer.phoneNumber,\r\n      email: state.userReducer.email,\r\n      feet: state.userReducer.feet,\r\n      inches: state.userReducer.inches,\r\n      birthDate: state.userReducer.birthDate,\r\n      educationLevel:state.userReducer.educationLevel\r\n      //phoneNumber:state.userReducer.phoneNumber\r\n  \r\n    };\r\n  };\r\n\r\n export default connect(mapStateToProps)(ResultsVerify);\r\n","import React from 'react';\r\n// import { FormGroup,ControlLabel,HelpBlock } from 'react-datepicker';\r\nimport { connect } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport {setAddressLine,setCity,setEducationLevel,setEmail,setFeet,SetLastName,\r\n  setFirstName,setInches,setState,setZipCode,setBirthDate,setPhoneNumber}\r\nfrom '../redux/actions/userActions';\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst SurveyForm= ({dispatch,email})=>{\r\n  const [birthDate, setBirthDate] = React.useState(new Date());\r\n  const [validatePage ,setValidatePage]=React.useState(false);\r\n  const[confirmEmail,setConfirmEmail]=React.useState(null);\r\n  const[errorMessage,setErrorMessage]=React.useState(null);\r\n  \r\n  const handleSubmit = () => {\r\n    console.log(email);\r\n    console.log(confirmEmail);\r\n\r\n    if(email!=confirmEmail){\r\n      setErrorMessage(\"Email ids dont match. Please reenter\");\r\n    }\r\n    else{\r\n      setValidatePage(true);\r\n    }\r\n\r\n  }\r\n\r\n  if (validatePage) {\r\n    return <Redirect to=\"/ResultsVerify\"/>;\r\n  } \r\n\r\n    return(  <div class=\"container\">\r\n    {/* <div class=\"py-5 text-center\">\r\n      <h2>Data Survey form</h2>\r\n    </div> */}\r\n<div class=\"card\" >\r\n<div class=\"card-header text-center\">\r\n  CSC 642 Summer 2020 Individual Assignment Swetha Govindu\r\n  </div>\r\n  <div class=\"py-5 text-center\">\r\n      <h2>Data Survey Form</h2>\r\n    </div>\r\n    <div class=\"row\">\r\n      \r\n      </div>\r\n      <div class=\"col-md-8 mx-auto\">\r\n      \r\n        <span class=\"form-text small text-muted\">\r\n        <span style={{ \"color\": \"red\" }}>*</span> fields are mandatory\r\n       </span>\r\n        <form class=\"justify-content-center\" novalidate>\r\n          <div class=\"row\" style={{\"float\":\"center\"}}>\r\n            <div class=\"col-md-6 mb-3\">\r\n              <label for=\"firstName\">First name<span style={{ \"color\": \"red\" }}>*</span></label>\r\n              <input type=\"inputfirstName\" class=\"form-control\" id=\"inputFirstName\" onChange={(event) => dispatch(setFirstName(event.target.value))} pattern = \"[A-Za-z\\s]+\" placeholder=\"First Name\"  required></input>\r\n              <span class=\"form-text small text-muted\">\r\n       Name must contain letters only.\r\n       </span>\r\n              <div class=\"invalid-feedback\">\r\n                Valid first name is .\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6 mb-3\">\r\n              <label for=\"lastName\">Last name <span style={{ \"color\": \"red\" }}>*</span></label>\r\n              <input type=\"lastName\" class=\"form-control\" id=\"inputLastName\" onChange={(event) => dispatch(SetLastName(event.target.value))} pattern = \"[A-Za-z\\s]+\" placeholder=\"Last name\"  required></input>\r\n              <div class=\"invalid-feedback\">\r\n                Valid last name is .\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n         \r\n          <div class=\"mb-3\">\r\n            <label for=\"address\">Address <span style={{ \"color\": \"red\" }}>*</span></label>\r\n            <input type=\"text\" class=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\" maxlength=\"40\"  onChange={(event) => dispatch(setAddressLine(event.target.value))} pattern=\"[0-9]+[A-Za-z\\s]+[A-Za-z\\s]\"></input>\r\n            <div class=\"invalid-feedback\">\r\n              Please enter your  address.\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-5 mb-3\">\r\n              <label for=\"city\">City <span style={{ \"color\": \"red\" }}>*</span></label>\r\n              <input type=\"text\" class=\"form-control\" onChange={(event) => dispatch(setCity(event.target.value))} id=\"inputCity\"></input>\r\n             <div class=\"valid-feedback\">\r\n                Looks good!\r\n             </div>\r\n            </div>\r\n            <div class=\"col-md-4 mb-3\">\r\n              <label for=\"state\">State <span style={{ \"color\": \"red\" }}>*</span></label>\r\n              <select id=\"inputState\" class=\"form-control\" onChange={(event) => dispatch(setState(event.target.value))}>\r\n                  <option selected>Choose...</option>\r\n                  <option value=\"\"></option>\r\n                  <option value=\"AS\">American Samoa</option>\r\n                  <option value=\"GU\">Guam</option>\r\n                  <option value=\"MP\">Northern Mariana Islands</option>\r\n                  <option value=\"PR\">Puerto Rico</option>\r\n                  <option value=\"UM\">United States Minor Outlying Islands</option>\r\n                  <option value=\"VI\">Virgin Islands</option>\r\n                  <option value=\"AL\">Alabama</option>\r\n                  <option value=\"AK\">Alaska</option>\r\n                  <option value=\"AZ\">Arizona</option>\r\n                  <option value=\"AR\">Arkansas</option>\r\n                  <option value=\"CA\">California</option>\r\n                  <option value=\"CO\">Colorado</option>\r\n                  <option value=\"CT\">Connecticut</option>\r\n                  <option value=\"DE\">Delaware</option>\r\n                  <option value=\"DC\">District Of Columbia</option>\r\n                  <option value=\"FL\">Florida</option>\r\n                  <option value=\"GA\">Georgia</option>\r\n                  <option value=\"HI\">Hawaii</option>\r\n                  <option value=\"ID\">Idaho</option>\r\n                  <option value=\"IL\">Illinois</option>\r\n                  <option value=\"IN\">Indiana</option>\r\n                  <option value=\"IA\">Iowa</option>\r\n                  <option value=\"KS\">Kansas</option>\r\n                  <option value=\"KY\">Kentucky</option>\r\n                  <option value=\"LA\">Louisiana</option>\r\n                  <option value=\"ME\">Maine</option>\r\n                  <option value=\"MD\">Maryland</option>\r\n                  <option value=\"MA\">Massachusetts</option>\r\n                  <option value=\"MI\">Michigan</option>\r\n                  <option value=\"MN\">Minnesota</option>\r\n                  <option value=\"MS\">Mississippi</option>\r\n                  <option value=\"MO\">Missouri</option>\r\n                  <option value=\"MT\">Montana</option>\r\n                  <option value=\"NE\">Nebraska</option>\r\n                  <option value=\"NV\">Nevada</option>\r\n                  <option value=\"NH\">New Hampshire</option>\r\n                  <option value=\"NJ\">New Jersey</option>\r\n                  <option value=\"NM\">New Mexico</option>\r\n                  <option value=\"NY\">New York</option>\r\n                  <option value=\"NC\">North Carolina</option>\r\n                  <option value=\"ND\">North Dakota</option>\r\n                  <option value=\"OH\">Ohio</option>\r\n                  <option value=\"OK\">Oklahoma</option>\r\n                  <option value=\"OR\">Oregon</option>\r\n                  <option value=\"PA\">Pennsylvania</option>\r\n                  <option value=\"RI\">Rhode Island</option>\r\n                  <option value=\"SC\">South Carolina</option>\r\n                  <option value=\"SD\">South Dakota</option>\r\n                  <option value=\"TN\">Tennessee</option>\r\n                  <option value=\"TX\">Texas</option>\r\n                  <option value=\"UT\">Utah</option>\r\n                  <option value=\"VT\">Vermont</option>\r\n                  <option value=\"VA\">Virginia</option>\r\n                  <option value=\"WA\">Washington</option>\r\n                  <option value=\"WV\">West Virginia</option>\r\n                  <option value=\"WI\">Wisconsin</option>\r\n                  <option value=\"WY\">Wyoming</option>\r\n            </select>\r\n              <div class=\"invalid-feedback\">\r\n                Please provide a valid state.\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-3 mb-3\">\r\n              <label for=\"zip\">Zip <span style={{ \"color\": \"red\" }}>*</span></label>\r\n              <input type=\"text\" class=\"form-control\" id=\"zip\" placeholder=\"\" ></input>\r\n              <span class=\"form-text small text-muted\">\r\n       ZipCode must contain five positive digits.\r\n       </span>\r\n              <div class=\"invalid-feedback\">\r\n                Zip code .\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"username\">Birth date <span style={{ \"color\": \"red\" }}>*</span></label>\r\n            <div class=\"input-group\">\r\n            \r\n                <input type=\"date\" class=\"form-control\" id=\"Email\" placeholder=\"Email\" ></input>\r\n\r\n\r\n                {/* <DatePicker type=\"date\" selected={startDate} onChange={date => setStartDate(date)} placeholder=\"Bith Date\"/> */}\r\n            \r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n          <label for=\"inputEducationLevel\">Education level <span class=\"text-muted\">  (Optional)</span></label>\r\n            <div class=\"input-group\">\r\n            \r\n            <select id=\"inputEducation\" name=\"Education\" class=\"form-control\" onChange={(event) => dispatch(setEducationLevel(event.target.value))} placeholder=\"Education\">\r\n                  <option></option>\r\n                  <option>High School</option>\r\n                  <option>College</option>\r\n                  <option>Graduate Study</option>\r\n                  <option>PHD</option>\r\n    </select>              \r\n            </div>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n          <label for=\"inputHeight\">Height<span class=\"text-muted\">  (Optional)</span>  </label> \r\n            <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n\r\n<input type=\"number\"  min=\"1\" class=\"form-control\" placeholder=\"Feet\"   onChange={event=> dispatch(setFeet(event.target.value))} id=\"inputFeet\"></input>\r\n\r\n  </div>\r\n  <div class=\"col-md-6\">\r\n  <input type=\"number\"  min=\"0\" class=\"form-control\" placeholder=\"Inches\" placeholder=\"Inches\"\r\n             onChange={event=> dispatch(setInches(event.target.value))} id=\"inputCm\"></input>\r\n  </div>\r\n            </div>\r\n          </div>\r\n       \r\n          <div class=\"mb-3\">\r\n            <label for=\"phoneNumber\">Phone number <span style={{ \"color\": \"red\" }}>*</span></label>\r\n            <div class=\"input-group\">\r\n           \r\n            <input type=\"text\" name=\"Phone\" pattern = \"^\\d{7}$\"id=\"inputPhone\" class=\"form-control\" onChange={(event) => dispatch(setPhoneNumber(event.target.value))} placeholder=\"Phone number\" required></input>\r\n              <div class=\"input-group-append\">\r\n    <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"fa fa-phone\" aria-hidden=\"true\"></i></span>\r\n  </div>\r\n            </div>\r\n            <span class=\"form-text small text-muted\">\r\n       Phone Number  must contain seven positive digits .\r\n       </span>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"email\">Email address <span style={{ \"color\": \"red\" }}>*</span></label>\r\n            <div class=\"input-group\">\r\n            \r\n            <input type=\"text\" name=\"email\" id=\"inputPhone\" class=\"form-control\" onChange={(event) => dispatch(setEmail(event.target.value))} placeholder=\"Email Address\" required></input>\r\n              <div class=\"input-group-append\">\r\n    <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></span>\r\n  </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"mb-3\">\r\n            <label for=\"email\">Confirm email address <span style={{ \"color\": \"red\" }}>*</span></label>\r\n            <div class=\"input-group\">\r\n            \r\n            <input type=\"text\" name=\"email\" id=\"inputPhone\" class=\"form-control\" onChange={(event) => (setConfirmEmail(event.target.value))} placeholder=\"Confirm Email Address\" required></input>\r\n              {/* <span class=\"form-text small text-muted\">\r\n       Make sure two emails are\r\n       </span> */}\r\n            <div class=\"input-group-append\">\r\n    <span class=\"input-group-text\" id=\"basic-addon2\"><i class=\"fa fa-envelope\" aria-hidden=\"true\"></i></span>\r\n  </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n    <div class=\"form-check\">\r\n      <input class=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" required></input>\r\n      <label class=\"form-check-label\" for=\"gridCheck\">\r\n      I Agree to Terms & Conditions<span style={{ \"color\": \"red\" }}>*</span>\r\n            </label>\r\n    </div>\r\n  </div>\r\n  <div class=\"form-group\">\r\n                            <div class=\"g-recaptcha\" data-sitekey=\"6LfKURIUAAAAAO50vlwWZkyK_G2ywqE52NU7YO0S\" data-callback=\"verifyRecaptchaCallback\" data-expired-callback=\"expiredRecaptchaCallback\"></div>\r\n                            <input class=\"form-control d-none\" data-recaptcha=\"true\" required data-error=\"Please complete the Captcha\" />\r\n                            <div class=\"help-block with-errors\"></div>\r\n    </div>\r\n          <button class=\"btn btn-primary btn-lg btn-block\" type=\"submit\" onClick={handleSubmit}>Submit</button>\r\n\r\n         </form>\r\n</div>\r\n      \r\n      </div>\r\n    </div>\r\n\r\n  \r\n    )\r\n};\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    firstName: state.userReducer.firstName,\r\n    lastName: state.userReducer.lastName,\r\n    city: state.userReducer.city,\r\n    state: state.userReducer.state,\r\n    addressLine: state.userReducer.addressLine,\r\n    zipCode: state.userReducer.zipCode,\r\n    phoneNumber: state.userReducer.phoneNumber,\r\n    email: state.userReducer.email,\r\n    feet: state.userReducer.feet,\r\n    inches: state.userReducer.inches,\r\n    birthDate: state.userReducer.birthDate,\r\n\r\n  };\r\n};\r\nexport default connect(mapStateToProps) (SurveyForm);","export const setFirstName = firstName => ({ // 1 param = no parentheses\r\n  type: 'SET_FIRST_NAME',\r\n  firstName,\r\n});\r\n\r\nexport const SetLastName = lastName => ({\r\n  type: 'SET_LAST_NAME',\r\n  lastName,\r\n});\r\n\r\nexport const setCity = city => ({\r\n  type: 'SET_CITY',\r\n  city,\r\n});\r\n\r\nexport const setState=state => ({\r\n  type:'SET_STATE',\r\n  state,\r\n})\r\nexport const setAddressLine=addressLine => ({\r\n  type:'SET_ADDRESS_LINE',\r\n  addressLine,\r\n})\r\nexport const setZipCode=zipCode => ({\r\n  type:'SET_ZIPCODE',\r\n  zipCode,\r\n})\r\n\r\nexport const setEmail=email => ({\r\n  type:'SET_EMAIL',\r\n  email,\r\n})\r\nexport const setEducationLevel=educationLevel => ({\r\n  type:'SET_EDUCATION_LEVEL',\r\n  educationLevel,\r\n})\r\nexport const setFeet=feet => ({\r\n  type:'SET_FEET',\r\n  feet,\r\n})\r\nexport const setInches=inches => ({\r\n  type:'SET_INCHES',\r\n  inches,\r\n})\r\nexport const setBirthDate=birthDate => ({\r\n  type:'SET_BIRTH_DATE',\r\n  birthDate,\r\n})\r\nexport const setPhoneNumber=phoneNumber => ({\r\n  type:'SET_PHONE_NUMBER',\r\n  phoneNumber,\r\n})","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport  ResultsVerify from \"./pages/ResultsVerify\";\nimport example2 from './pages/surveyForm';\nimport surveyForm from './pages/surveyForm';\n\nconst App=({dispatch})=> {\n\n \n  return (\n    <Router >\n\n<Switch>\n    <Route path=\"/ResultsVerify\" component={ResultsVerify} />\n    <Route exact path=\"/\" component={surveyForm} />\n</Switch>\n</Router>\n  );\n}\n\n\nconst mapStateToProps = (state) => {\n  return {\n    firstName: state.userReducer.firstName,\n    lastName: state.userReducer.lastName,\n    city: state.userReducer.city,\n    state: state.userReducer.state,\n    addressLine: state.userReducer.addressLine,\n    zipCode: state.userReducer.zipCode,\n    phoneNumber: state.userReducer.phoneNumber,\n    email: state.userReducer.email,\n    feet: state.userReducer.feet,\n    inches: state.userReducer.inches,\n    birthDate: state.userReducer.birthDate,\n\n  };\n};\nexport default connect(mapStateToProps)(App);\n","// Creating a reducer\r\n\r\n// Step 1 initialize state\r\nconst INITIAL_STATE = {\r\n//   -\tUser first and last name *\r\n// -\tAddress*\r\n// -\tBirth date *\r\n// -\tEducation level  (options: high school, college, graduate studies, Ph.D)\r\n// -\tHeight (feet, inches)\r\n// -\tPhone  *  \t\t\t\t\r\n// -\te-mail (and another field to confirm e-mail) *\r\n\r\n  firstName: '',\r\n  lastName: '',\r\n  city: '',\r\n  state:'',\r\n  addressLine:'',\r\n  zipCode:'',\r\n  phoneNumber:null,\r\n  email: '',\r\n  educationLevel:'',\r\n  feet:0,\r\n  inches:0,\r\n  birthDate:null,\r\n  //phoneNumber:null\r\n\r\n};\r\n\r\n// Step 2 create listener function\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  // Step 3 create switch for action types\r\n  switch (action.type) {\r\n    case 'SET_FIRST_NAME':\r\n      return {\r\n        ...state,\r\n        firstName: action.firstName,\r\n      };\r\n    case 'SET_LAST_NAME':\r\n      return {\r\n        ...state, // spread operator\r\n        // email: state.email,\r\n        // isLoggedIn: state.isLoggedIn,\r\n        lastName: action.lastName,\r\n      };\r\n    case 'SET_CITY':\r\n      return {\r\n        ...state,\r\n        city: action.city,\r\n      };\r\n\r\n      case 'SET_STATE':\r\n        return{\r\n          ...state,\r\n          state:action.state,\r\n        };  \r\n        case 'SET_ADDRESS_LINE':\r\n        return{\r\n          ...state,\r\n          addressLine:action.addressLine,\r\n        };  \r\n        \r\n        case 'SET_ZIPCODE':\r\n          return{\r\n            ...state,\r\n            zipCode:action.zipCode,\r\n          };  \r\n          case 'SET_PHONE_NUMBER':\r\n          return{\r\n            ...state,\r\n            phoneNumber:action.phoneNumber,\r\n          };  \r\n          case 'SET_EMAIL':\r\n            return{\r\n              ...state,\r\n              email :action.email,\r\n            }; \r\n            case 'SET_BIRTH_DATE':\r\n              return{\r\n                ...state,\r\n                birthDate :action.birthDate,\r\n              }; \r\n            case 'SET_EDUCATION_LEVEL':\r\n              return{\r\n                ...state,\r\n                educationLevel :action.educationLevel,\r\n              };  \r\n              case 'SET_FEET':\r\n              return{\r\n                ...state,\r\n                feet :action.feet,\r\n              };  \r\n              case 'SET_INCHES':\r\n                return{\r\n                  ...state,\r\n                  inches :action.inches,\r\n                };  \r\n                // case 'SET_PHONE_NUMBER':\r\n                //   return{\r\n                //     ...state,\r\n                //     phoneNumber :action.phoneNumber,\r\n                //   };  \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from 'redux';\r\nimport userReducer from './userReducer';\r\n\r\nexport default combineReducers({\r\n  userReducer,\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './redux/reducers/rootReducer';\nimport * as serviceWorker from './serviceWorker';\nconst store = createStore(rootReducer);\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}